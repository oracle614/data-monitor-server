<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yiche.dao.RuleRunningLogBeanMapper" >
  <resultMap id="BaseResultMap" type="com.yiche.bean.RuleRunningLogBean" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="level_type" property="levelType" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="leader" property="leader" jdbcType="VARCHAR" />
    <result column="scope" property="scope" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="table_name" property="tableName" jdbcType="VARCHAR" />
    <result column="database_name" property="databaseName" jdbcType="VARCHAR" />
    <result column="column_name" property="columnName" jdbcType="VARCHAR" />
    <result column="is_warnning" property="isWarnning" jdbcType="VARCHAR" />
    <result column="value_compare" property="valueCompare" jdbcType="VARCHAR" />
    <result column="rule_id" property="ruleId" jdbcType="VARCHAR" />
    <result column="project" property="project" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="partition_type" property="partitionType" jdbcType="VARCHAR" />
    <result column="priority" property="priority" jdbcType="VARCHAR" />
    <result column="error" property="error" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="checkday" property="checkday"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rule_running_log_db
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yiche.bean.RuleRunningLogBean" >
    insert into rule_running_log_db (id, level_type, type, 
      leader, scope, value,
      status, create_time, table_name, 
      database_name, column_name, is_warnning, 
      value_compare, rule_id, project, 
      content, partition_type,error,priority,number,checkday)
    values (#{id,jdbcType=INTEGER}, #{levelType,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{leader,jdbcType=VARCHAR}, #{scope,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{tableName,jdbcType=VARCHAR}, 
      #{databaseName,jdbcType=VARCHAR}, #{columnName,jdbcType=VARCHAR}, #{isWarnning,jdbcType=VARCHAR}, 
      #{valueCompare,jdbcType=VARCHAR}, #{ruleId,jdbcType=VARCHAR}, #{project,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{partitionType,jdbcType=VARCHAR}, #{error,jdbcType=VARCHAR},
      #{priority,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, #{checkday,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yiche.bean.RuleRunningLogBean" >
    update rule_running_log_db
    set level_type = #{levelType,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      leader = #{leader,jdbcType=VARCHAR},
      scope = #{scope,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      table_name = #{tableName,jdbcType=VARCHAR},
      database_name = #{databaseName,jdbcType=VARCHAR},
      column_name = #{columnName,jdbcType=VARCHAR},
      is_warnning = #{isWarnning,jdbcType=VARCHAR},
      value_compare = #{valueCompare,jdbcType=VARCHAR},
      rule_id = #{ruleId,jdbcType=VARCHAR},
      project = #{project,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      partition_type = #{partitionType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, level_type, type, leader, scope, value, status, create_time, table_name, 
    database_name, column_name, is_warnning, value_compare, rule_id, project, content, 
    partition_type
    from rule_running_log_db
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, level_type, type, leader, scope, value, status, create_time, table_name, 
    database_name, column_name, is_warnning, value_compare, rule_id, project, content, 
    partition_type
    from rule_running_log_db
  </select>



  <select id="getResultLogByPage" resultMap="BaseResultMap" >
    select *
    from rule_running_log_db a,
    (select id
    from rule_running_log_db
    group by database_name,table_name
    ) b
    where a.id = b.id
    limit  #{index,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
  </select>

  <select id="getResultLogStatusCount" resultType="int" >
    select count(*)
    from rule_running_log_db
    where
    database_name=#{databaseName,jdbcType=VARCHAR}
    AND
    table_name=#{tableName,jdbcType=VARCHAR}
    AND
    status = #{status,jdbcType=VARCHAR}
  </select>

  <select id="getResultLogAllCount" resultType="int" >

    select count(*) from
    (  select count(*) as con
    from rule_running_log_db
    group by database_name,table_name
    ) a
  </select>

  <select id="getResultLogCount" resultType="int" >
    select count(*)
    from rule_running_log_db
    where
    database_name=#{databaseName,jdbcType=VARCHAR}
    AND
    table_name=#{tableName,jdbcType=VARCHAR}
  </select>

  <select id="getDataByDataBaseAndTable" resultMap="BaseResultMap" >
    select *
    from rule_running_log_db
    where
    database_name=#{databaseName,jdbcType=VARCHAR}
    AND
    table_name=#{tableName,jdbcType=VARCHAR}
    limit   #{index,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
  </select>

  <select id="getRunningLogByType" resultMap="BaseResultMap" >
    SELECT
    *
    FROM
    rule_running_log_db
    WHERE
    database_name = #{databaseName,jdbcType=VARCHAR}
    AND table_name =#{tableName,jdbcType=VARCHAR}
    AND column_name =#{columnName,jdbcType=VARCHAR}
    AND type =#{type,jdbcType=VARCHAR}
    and to_days(create_time) = to_days(now())
  </select>



  <select id="getTableRuleCountByItem" resultType="int" >
    SELECT
    count(*)
    FROM
    rule_running_log_db c
    INNER JOIN (
    SELECT
    b.tableid
    FROM
    item_module_list a
    INNER JOIN item_table_relation b ON a.id = b.itemid
    WHERE
    a.parentid = #{parentId,jdbcType=VARCHAR}
    OR a.id =#{id,jdbcType=VARCHAR}
    ) d ON c.rule_id = d.tableid
    AND date(create_time) = date_sub(curdate(), INTERVAL  #{day,jdbcType=INTEGER}  DAY)

  </select>


  <select id="getTableItemCount" resultType="int" >

    SELECT
    count(*)
    FROM
    item_module_list a
    INNER JOIN item_table_relation b ON a.id = b.itemid
    WHERE
    a.parentid = #{parentId,jdbcType=VARCHAR}
    OR a.id = #{id,jdbcType=VARCHAR}

  </select>


  <select id="getTableLogByItem" resultMap="BaseResultMap" >
    SELECT
    *
    FROM
    rule_running_log_db c
    INNER JOIN (
    SELECT
    b.tableid
    FROM
    item_module_list a
    INNER JOIN item_table_relation b ON a.id = b.itemid
    WHERE
    a.parentid = #{parentId,jdbcType=VARCHAR}
    OR a.id = #{id,jdbcType=VARCHAR}
    ) d ON c.rule_id = d.tableid
    AND date(create_time) = date_sub(curdate(), INTERVAL  #{day,jdbcType=INTEGER}  DAY)
  </select>



  <select id="getColumnRuleCountByItem" resultType="int" >
    SELECT
    count(*)
    FROM
    rule_running_log_db c
    INNER JOIN (
    SELECT
    b.columnid
    FROM
    item_module_list a
    INNER JOIN item_column_relation b ON a.id = b.itemid
    WHERE
    a.parentid = #{parentId,jdbcType=VARCHAR}
    OR a.id = #{id,jdbcType=VARCHAR}
    ) d ON c.rule_id = d.columnid
    AND date(create_time) = date_sub(curdate(), INTERVAL #{day,jdbcType=INTEGER} DAY)
  </select>

  <select id="getColumnItemCount" resultType="int" >

    SELECT
    count(*)
    FROM
    item_module_list a
    INNER JOIN item_column_relation b ON a.id = b.itemid
    WHERE
    a.parentid = #{parentId,jdbcType=VARCHAR}
    OR a.id = #{id,jdbcType=VARCHAR}

  </select>

  <select id="getColumnLogByItem" resultMap="BaseResultMap" >
    SELECT
    *
    FROM
    rule_running_log_db c
    INNER JOIN (
    SELECT
    b.columnid
    FROM
    item_module_list a
    INNER JOIN item_column_relation b ON a.id = b.itemid
    WHERE
    a.parentid = #{parentId,jdbcType=VARCHAR}
    OR a.id = #{id,jdbcType=VARCHAR}
    ) d ON c.rule_id = d.columnid
    AND date(create_time) = date_sub(curdate(), INTERVAL #{day,jdbcType=INTEGER} DAY)
  </select>





  <select id="getReadyItemAllFinish" resultMap="BaseResultMap" >
    SELECT
    *
    FROM
    rule_running_log_db c
    INNER JOIN (
    SELECT
    DISTINCT b.tableid
    FROM
    item_module_list a
    INNER JOIN item_table_relation b ON a.id = b.itemid
    WHERE
    a.parentid =  #{parentId,jdbcType=VARCHAR}
    OR a.id =  #{id,jdbcType=VARCHAR}
    ) d ON c.rule_id = d.tableid
    AND date(create_time) = date_sub(curdate(), INTERVAL #{day,jdbcType=INTEGER} DAY)
    where  c.type='完成时间' and c.status=#{status,jdbcType=VARCHAR}
    <if test="partitionType != null and partitionType != ''">
      and c.partition_type= #{partitionType,jdbcType=VARCHAR}
    </if>
  </select>

  <select id="getColumnItemFinish" resultMap="BaseResultMap" >
    SELECT
    *
    FROM
    rule_running_log_db c
    INNER JOIN (
    SELECT
    DISTINCT b.columnid
    FROM
    item_module_list a
    INNER JOIN item_column_relation b ON a.id = b.itemid
    WHERE
    a.parentid = #{parentId,jdbcType=VARCHAR}
    OR a.id = #{id,jdbcType=VARCHAR}
    ) d ON c.rule_id = d.columnid
    AND date(create_time) = date_sub(curdate(), INTERVAL #{day,jdbcType=INTEGER} DAY)
    where  c.status=#{status,jdbcType=VARCHAR}
    <if test="partitionType != null and partitionType != ''">
      and c.partition_type= #{partitionType,jdbcType=VARCHAR}
    </if>
  </select>

  <select id="getTableItemDnRFinish" resultMap="BaseResultMap" >
    SELECT
    *
    FROM
    rule_running_log_db c
    INNER JOIN (
    SELECT
    DISTINCT b.tableid
    FROM
    item_module_list a
    INNER JOIN item_table_relation b ON a.id = b.itemid
    WHERE
    a.parentid =  #{parentId,jdbcType=VARCHAR}
    OR a.id =  #{id,jdbcType=VARCHAR}
    ) d ON c.rule_id = d.tableid
    AND date(create_time) = date_sub(curdate(), INTERVAL #{day,jdbcType=INTEGER} DAY)
    where  c.type!='完成时间' and c.status=#{status,jdbcType=VARCHAR}
    <if test="partitionType != null and partitionType != ''">
      and c.partition_type= #{partitionType,jdbcType=VARCHAR}
    </if>
  </select>

  <update id="updateStatusByRuleId"  >
    UPDATE  rule_running_log_db  set value= #{value,jdbcType=VARCHAR}
    where rule_id= #{ruleId,jdbcType=VARCHAR}
    and
    date(create_time) = date_sub(curdate(), INTERVAL  #{day,jdbcType=INTEGER} DAY)
  </update>

  <select id="queryTodayNoPassRule" resultMap="BaseResultMap">
    select * from rule_running_log_db where status='不通过'
    and  date(create_time) = date_sub(curdate(), INTERVAL 0 DAY)
  </select>

  <select id="queryTodayResultByTableName" resultMap="BaseResultMap">
    select * from rule_running_log_db where
    database_name= #{databaseName,jdbcType=VARCHAR}
    and table_name= #{tableName,jdbcType=VARCHAR}
    and status='不通过'
    and  date(create_time) = date_sub(curdate(), INTERVAL 0 DAY)
  </select>
  <select id="getTimeRuleNotReady" resultMap="BaseResultMap" >
    SELECT
    *
    FROM
    rule_running_log_db c
    INNER JOIN (
    SELECT
    DISTINCT b.tableid
    FROM
    item_module_list a
    INNER JOIN item_table_relation b ON a.id = b.itemid
    WHERE
    a.parentid =  #{parentId,jdbcType=VARCHAR}
    OR a.id =  #{id,jdbcType=VARCHAR}
    ) d ON c.rule_id = d.tableid
    AND date(create_time) = date_sub(curdate(), INTERVAL #{day,jdbcType=INTEGER} DAY)
    where  c.type='完成时间' and c.value=#{value,jdbcType=VARCHAR}
    <if test="partitionType != null and partitionType != ''">
      and c.partition_type= #{partitionType,jdbcType=VARCHAR}
    </if>
  </select>
</mapper>